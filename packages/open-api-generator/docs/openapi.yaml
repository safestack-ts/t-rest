openapi: 3.0.0
info:
  title: My API
  version: 2024-01-01
servers:
  - url: https://api.example.com
    description: Production server
tags:
  - name: users
    description: Users related operations
paths:
  /api/checkout/:checkoutId/discounts/:discountId:
    post:
      description: Delete a discount code from a checkout
      tags:
        - checkout
        - discounts
      parameters:
        - name: pratiq-client-id
          in: header
          description: Global Webshop Client Id
          required: true
          schema:
            oneOf:
              - type: string
              - type: number
        - name: pratiq-channel-uuid
          in: header
          description: UUID of the sales channel
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                entries:
                  type: array
                  items:
                    type: object
                    properties:
                      productDefinitionId:
                        type: number
                      slotId:
                        type: number
                      children:
                        type: array
                        items:
                          type: object
                          properties:
                            productDefinitionId:
                              type: number
                            slotId:
                              type: number
                            children:
                              type: array
                              items:
                                $ref: "#/components/schemas/CreateBasketChildEntryPayload"
                          required:
                            - productDefinitionId
                            - slotId
                      originatedEntries:
                        type: array
                        items:
                          type: object
                          properties:
                            productDefinitionId:
                              type: number
                            slotId:
                              type: number
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  message:
                    type: string
                required:
                  - email
                  - message
  /users/:userId:
    get:
      summary: Get user by id
      description: Get user by id if the user exists and is part of the requested
        client specified in the pratiq-client-id http header.
      tags:
        - users
      operationId: getUserById
      parameters:
        - name: pratiq-client-id
          in: header
          description: Global Webshop Client Id
          required: true
          schema:
            oneOf:
              - type: string
              - type: number
        - name: pratiq-channel-uuid
          in: header
          description: UUID of the sales channel
          required: false
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: number
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/UserWithSubUsers"
                  version:
                    type: string
                required:
                  - data
                  - version
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: number
        email:
          type: string
      required:
        - id
        - email
    UserWithSubUsers:
      type: object
      properties:
        id:
          type: number
        email:
          type: string
        subUsers:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/User"
              - $ref: "#/components/schemas/UserWithSubUsers"
        credit:
          type: number
        photo:
          type: string
          format: binary
      required:
        - id
        - email
        - subUsers
        - credit
        - photo
