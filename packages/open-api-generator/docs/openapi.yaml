openapi: 3.0.0
info:
  title: My API
  version: 2024-02-01
servers:
  - url: https://api.example.com
    description: Production server
tags:
  - name: users
    description: Users related operations
paths:
  /api/checkout/:checkoutId/discounts/:discountId:
    delete:
      description: Delete a discount code from a checkout
      tags:
        - checkout
        - discounts
      parameters:
        - name: pratiq-client-id
          in: header
          description: Global Webshop Client Id
          required: true
          schema:
            oneOf:
              - type: string
              - type: number
        - name: pratiq-channel-uuid
          in: header
          description: UUID of the sales channel
          required: false
          schema:
            type: string
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
        - name: discountId
          in: path
          required: true
          schema:
            type: number
        - name: formState
          in: query
          required: false
          schema:
            type: object
            properties:
              validity:
                type: object
                properties:
                  from:
                    type: string
                  to:
                    type: string
              allocation:
                oneOf:
                  - type: object
                    properties:
                      value:
                        type: number
                      kind:
                        type: string
                        enum:
                          - quantity
                  - type: object
                    properties:
                      values:
                        type: array
                        items:
                          oneOf:
                            - type: object
                              properties:
                                kind:
                                  type: string
                                  enum:
                                    - anonymous
                                quantity:
                                  type: number
                                personType:
                                  type: string
                            - type: object
                              properties:
                                kind:
                                  type: string
                                  enum:
                                    - personalized
                                personType:
                                  type: string
                                personIds:
                                  type: array
                                  items:
                                    type: number
                      kind:
                        type: string
                        enum:
                          - persontype
              attributes:
                type: object
                additionalProperties:
                  type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  message:
                    type: string
                required:
                  - email
                  - message
  /users/:userIdentifier:
    get:
      summary: Get user by identifier
      description: >-
        Get user by id if the user exists and is part of the requested client
        specified in the pratiq-client-id http header.


        In addition, this new revision of the route also includes the tags of
        the user in the response.
      tags:
        - users
      operationId: getUserById
      parameters:
        - name: pratiq-client-id
          in: header
          description: Global Webshop Client Id
          required: true
          schema:
            oneOf:
              - type: string
              - type: number
        - name: pratiq-channel-uuid
          in: header
          description: UUID of the sales channel
          required: false
          schema:
            type: string
        - name: userIdentifier
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/UserWithTags"
                  version:
                    type: string
                required:
                  - data
                  - version
  /complexRoute:
    get:
      parameters:
        - name: pratiq-client-id
          in: header
          description: Global Webshop Client Id
          required: true
          schema:
            oneOf:
              - type: string
              - type: number
        - name: pratiq-channel-uuid
          in: header
          description: UUID of the sales channel
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  format: date-time
                to:
                  type: string
                  format: date-time
                validAt:
                  type: string
                  format: date-time
                productDefinitionIds:
                  type: array
                  items:
                    type: number
                ignoreStale:
                  type: boolean
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/UserWithTags"
                  version:
                    type: string
                required:
                  - data
                  - version
components:
  schemas:
    UserWithTags:
      type: object
      properties:
        id:
          type: number
        email:
          type: string
        tags:
          type: array
          items:
            type: string
      required:
        - id
        - email
        - tags
